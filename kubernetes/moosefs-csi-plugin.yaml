---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: csi-moosefs-controller
  namespace: kube-system
spec:
  serviceName: "csi-moosefs"
  replicas: 1
  selector:
    matchLabels:
      app: csi-moosefs-controller
      role: csi-moosefs
  template:
    metadata:
      labels:
        app: csi-moosefs-controller
        role: csi-moosefs
    spec:
      priorityClassName: system-cluster-critical
      serviceAccount: csi-moosefs-plugin-controller
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        # Moosefs Plugin
        - name: moosefs-csi-plugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: kunde21/moosefs-csi:v3.0.116-v0.1.1
          args:
            - "controller"
            - "--node=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--server=$(MFS_SERVER)"
            - "--root=$(MFS_ROOT_PATH)"
            - "--mount=$(MFS_ROOT_MOUNT_PATH)"
          envFrom:
            - configMapRef:
                name: csi-moosefs-config
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: MFS_ROOT_MOUNT_PATH
              value: /opt/mfs/kubernetes
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
            - name: pods-mount-dir
              mountPath: /var/lib/mfs/kubernetes
              mountPropagation: "Bidirectional"
            - name: controller-mount-dir
              mountPath: /opt/mfs/kubernetes
              mountPropagation: "Bidirectional"
        # provisioner
        - name: csi-provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v3.1.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        # attacher
        - name: csi-attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.4.0
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--timeout=30s"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        # resizer
        - name: csi-resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.4.0
          args:
            - "--timeout=15s"
            - "--csi-address=$(ADDRESS)"
            - "--handle-volume-inuse-error=false"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        # TODO: Integrate mfssnapshot functionality
        # snapshotter
        # - name: csi-snapshotter
        #   image: kunde21/csi-snapshotter:v4.0.0
        #   args:
        #     - "--connection-timeout=15s"
        #     - "--csi-address=$(ADDRESS)"
        #   env:
        #     - name: ADDRESS
        #       value: /var/lib/csi/sockets/pluginproxy/csi.sock
        #   imagePullPolicy: "IfNotPresent"
        #   volumeMounts:
        #     - name: socket-dir
        #       mountPath: /var/lib/csi/sockets/pluginproxy/
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/mfs/kubernetes
            type: DirectoryOrCreate
        - name: controller-mount-dir
          hostPath:
            path: /opt/mfs/kubernetes
            type: DirectoryOrCreate

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: csi-moosefs-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: csi-moosefs-node
  template:
    metadata:
      labels:
        app: csi-moosefs-node
        role: csi-moosefs
    spec:
      priorityClassName: system-node-critical
      serviceAccount: csi-moosefs-plugin-node
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: csi-moosefs-plugin
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: kunde21/moosefs-csi:v3.0.116-v0.1.1
          args:
            - "node"
            - "--node=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--server=$(MFS_SERVER)"
            - "--root=$(MFS_ROOT_PATH)"
          envFrom:
            - configMapRef:
                name: csi-moosefs-config
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: "Bidirectional"
            - mountPath: /dev
              name: device-dir
        - name: driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.0
          imagePullPolicy: IfNotPresent
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/csi.kunde21.moosefs/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi/
            - name: registration-dir
              mountPath: /registration/
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.kunde21.moosefs
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
